{"version":3,"file":"d3-progress.min.js","sources":["../src/progress.js"],"sourcesContent":["import { axisBottom as d3AxisBottom } from 'd3-axis';\nimport { scaleLinear as d3ScaleLinear } from 'd3-scale';\nimport 'd3-transition';\n\n/**\n * Make a data structure to hold a progress bar with markers\n * @return {progressChart}\n */\nexport default function () {\n  let data = {};\n  let width = 960;\n  let height = 100;\n  let graphMargins = { top: 10, right: 5, bottom: 30, left: 15 }; // Absolute margins\n  let graphWidth = function () { return width - graphMargins.left - graphMargins.right; };\n  let graphHeight = function () { return height - graphMargins.top - graphMargins.bottom; };\n  let marginW = 0.1;\n  let marginH = 0.1;\n\n  let ticksValues = [0, 0.25, 0.50, 0.75, 1];\n\n  // For each small multipleâ€¦\n  function progressCVS (svgitem) {\n\n    // This wrapper contains the graph and the axis\n    let wrap = svgitem\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('class', 'progress-cvs')\n      .attr('transform', `translate(${graphMargins.left},0)`);\n\n    // This is just the graph without axis\n    let extentX = graphWidth() * (1 - marginW * 2);\n    let extentY = graphHeight() * (1 - marginH * 2);\n    let graphWrap = wrap\n      .append('g')\n      .attr('width', extentX)\n      .attr('height', extentY);\n\n    // Scales\n    const scaleX = d3ScaleLinear()\n      .domain([0, 1])\n      .range([0, extentX]);\n\n    // Draw xscale (tick 0.25)\n\n    let markervalues = data.markers.map(function (d) {\n      return d.value;\n    });\n\n    const tickFormat = function (val) {return Math.round(val * 100);};\n    const tickSize = graphMargins.bottom/3;\n\n    // Add both axes\n    const axismarker = wrap.append('g').attr('class', 'axismarker');\n    axismarker.attr('transform', `translate(0,${extentY})`).call(\n      d3AxisBottom(scaleX)\n        .tickValues(markervalues.sort())\n        .tickFormat(tickFormat)\n        .tickSize(tickSize)\n    );\n\n    const axisgraph = wrap.append('g').attr('class', 'axisgraph');\n    axisgraph.attr('transform', `translate(0,${extentY})`).call(\n      d3AxisBottom(scaleX)\n        .tickValues(ticksValues)\n        .tickFormat(tickFormat)\n        .tickSize(tickSize)\n    );\n    // Fixup style\n    axisgraph.select('.domain').remove();\n    axismarker.select('.domain').remove();\n    axisgraph.attr('font-size', tickSize); // 80% of the margin\n    axismarker.attr('font-size', tickSize); // 80% of the margin\n\n    // Draw grey background\n    graphWrap.append('rect')\n      .attr('class', 'background-bar')\n      .attr('width', extentX)\n      .attr('height', extentY)\n      .attr('rx', extentY * marginH)\n      .attr('ry', extentY * marginH)\n      .attr('x', 0)\n      .attr('y', 0);\n\n    // Draw results\n    let barHeight = function (index) { return extentY * (1 - marginH * (index + 1) * 4); };\n    let barMiddlePosition = function (index) { return extentY / 2 - barHeight(index) / 2; };\n\n    graphWrap.selectAll('rect.results')\n      .data(data.results)\n      .enter()\n      .append('rect')\n      .attr('class', function (d) { return 'results competency-type-bar-' + ((d.type)?d.type:1);})\n      .attr('width', function (r) { return scaleX(r.value);})\n      .attr('height', function (_d, index) {return barHeight(index);})\n      .attr('rx', extentY * marginH)\n      .attr('rx', extentY * marginH)\n      .attr('x', 0)\n      .attr('y', function (_d, index) { return barMiddlePosition(index);});\n    // Draw markers\n    let circleRadius = function (data) { return extentY * (1 - marginH * (data.active ? 2 : 4)) / 3; };\n\n    let marker = graphWrap.selectAll('g.marker')\n      .data(data.markers)\n      .enter()\n      .append('g')\n      .attr('class', function (d) {return d.active ? 'marker active' : 'marker';})\n      .attr('x', function (r) { return scaleX(r.value);})\n      .attr('y', 0);\n\n    marker.append('circle')\n      .attr('r', circleRadius)\n      .attr('cx', function (r) { return scaleX(r.value);})\n      .attr('cy', extentY / 2);\n\n    marker.append('text')\n      .attr('x', function (r) { return scaleX(r.value);})\n      .attr('y', extentY / 2)\n      .text(function (d) {return d.label;})\n      .attr('class', 'marker-text')\n      .attr('font-size', extentY * (1 - marginH) / 3);\n  }\n\n  progressCVS.width = function (_) {\n    if (!arguments.length) return width;\n    width = +_;\n    return this;\n  };\n\n  progressCVS.height = function (_) {\n    if (!arguments.length) return height;\n    height = +_;\n    return this;\n  };\n\n  progressCVS.margins = function (_) {\n    if (!arguments.length) return graphMargins;\n    graphMargins = _;\n    return this;\n  };\n\n  progressCVS.data = function (_) {\n    if (!arguments.length) return data;\n    data = _;\n    return this;\n  };\n\n  return progressCVS;\n}\n\n\n"],"names":["data","width","height","graphMargins","top","right","bottom","left","graphWidth","graphHeight","marginW","marginH","ticksValues","progressCVS","svgitem","wrap","attr","append","extentX","extentY","graphWrap","scaleX","d3ScaleLinear","domain","range","markervalues","markers","map","d","value","tickFormat","val","Math","round","tickSize","axismarker","call","d3AxisBottom","tickValues","sort","axisgraph","select","remove","barHeight","index","selectAll","results","enter","type","r","_d","barMiddlePosition","marker","active","text","label","_","arguments","length","this","margins"],"mappings":"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"}